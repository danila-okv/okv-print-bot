# modules/admin/handlers/control.py

from aiogram import Router, types
from modules.decorators import admin_only
from modules.ui.keyboards.tracker import send_managed_message
from aiogram.filters import Command
from ..services.control import (
    set_pause, clear_pause,
    pop_all_queued_actions,
    backup_database
)

from config import BACKUP_PATH_STR

router = Router()

@router.message(Command("pause"))
@admin_only
async def cmd_pause(message: types.Message):
    # –∏–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–∏—á–∏–Ω—É (–≤—Å—ë, —á—Ç–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã)
    reason = message.text.partition(' ')[2].strip() or "ü§ñ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã"
    set_pause(reason)
    await message.reply(f"‚è∏Ô∏è –ë–æ—Ç –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ –ø–∞—É–∑–∞.\n–ü—Ä–∏—á–∏–Ω–∞: <i>{reason}</i>")

@router.message(Command("resume"))
@admin_only
async def cmd_resume(message: types.Message):
    clear_pause()
    await message.reply("‚ñ∂Ô∏è –ë–æ—Ç –≤–æ–∑–æ–±–Ω–æ–≤–∏–ª —Ä–∞–±–æ—Ç—É.")

    # –í—ã—Ç—è–≥–∏–≤–∞–µ–º –≤—Å–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ —Å—Ä–∞–∑—É —É–¥–∞–ª—è–µ–º –∏—Ö –∏–∑ –ë–î
    actions = pop_all_queued_actions()

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è–ª–∏ –ª—é–±—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤–æ –≤—Ä–µ–º—è –ø–∞—É–∑—ã.
    target_user_ids = {act['user_id'] for act in actions}

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤.
    from modules.billing.services.promo import add_user_bonus_pages

    # –ù–∞—á–∏—Å–ª—è–µ–º 5 –±–æ–Ω—É—Å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ —É–≤–µ–¥–æ–º–ª—è–µ–º –µ–≥–æ –æ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã.
    for uid in target_user_ids:
        try:
            add_user_bonus_pages(uid, 5)
        except Exception:
            # –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            pass
        await send_managed_message(
            message.bot,
            uid,
            text="‚úÖ –ë–æ—Ç —Å–Ω–æ–≤–∞ –≤ –¥–µ–ª–µ!\n–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ ‚Äî –¥–∞—Ä—é —Ç–µ–±–µ 5 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü üéâ"
        )


# ---------------------------------------------------------------------------
# Backup command
# ---------------------------------------------------------------------------
@router.message(Command("backup"))
@admin_only
async def cmd_backup(message: types.Message) -> None:
    """
    –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    –ü—Ä–∏ –≤—ã–∑–æ–≤–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ –∫–∞—Ç–∞–ª–æ–≥ BACKUP_PATH —Å
    –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π –≤ –∏–º–µ–Ω–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤ —á–∞—Ç.

    –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å admin, –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç—Å—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º admin_only.
    """
    # Create the backup file
    try:
        backup_path = backup_database()
    except Exception as err:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {err}")
        return

    # Attempt to send the backup file to the admin.  If FSInputFile is not
    # available (older aiogram), fall back to reading bytes into BufferedInputFile.
    try:
        # Determine file name for caption
        file_name = backup_path.name
        try:
            # aiogram v3 exports FSInputFile under aiogram.types, fallback gracefully
            from aiogram.types import FSInputFile
            file = FSInputFile(path=str(backup_path), filename=file_name)
        except Exception:
            from aiogram.types import BufferedInputFile
            file_bytes = backup_path.read_bytes()  # type: ignore[attr-defined]
            file = BufferedInputFile(file_bytes, filename=file_name)
        await message.answer_document(file, caption=f"üóÑÔ∏è –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {file_name}")
    except Exception as err:
        # If sending the file fails, inform the admin about the location
        await message.answer(
            f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞: {backup_path}\n"
            f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (–æ—à–∏–±–∫–∞: {err}).\n"
            f"–í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –∫–æ–ø–∏—é –≤—Ä—É—á–Ω—É—é –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ {BACKUP_PATH_STR}."
        )
