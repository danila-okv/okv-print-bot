from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from ..callbacks import (
    CONFIRM, BACK, LAYOUTS,OPTION_DUPLEX, OPTION_LAYOUT, OPTION_PAGES
)
from .buttons import (
    BUTTON_CONFIRM, BUTTON_EDIT, BUTTON_RETURN, BUTTONS_LAYOUT,
    BUTTON_OPTIONS_DUPLEX, BUTTON_OPTIONS_LAYOUT, BUTTON_OPTIONS_PAGES
)

confim_pages_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text=BUTTON_CONFIRM, callback_data=CONFIRM),
            InlineKeyboardButton(text=BUTTON_EDIT, callback_data=BACK)
        ]
    ]
)

def get_print_options_kb(duplex: bool) -> InlineKeyboardMarkup:
    duplex_text = f"‚úÖ {BUTTON_OPTIONS_DUPLEX}" if duplex else f"‚ùå {BUTTON_OPTIONS_DUPLEX}"

    markup = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text=BUTTON_OPTIONS_LAYOUT, callback_data=OPTION_LAYOUT),
                InlineKeyboardButton(text=duplex_text, callback_data=OPTION_DUPLEX)
            ],
            [
                InlineKeyboardButton(text=BUTTON_RETURN, callback_data=BACK),
                InlineKeyboardButton(text=BUTTON_OPTIONS_PAGES, callback_data=OPTION_PAGES)
            ]
        ]
    )
    return markup

def get_print_layouts_kb(selected_layout: str) -> InlineKeyboardMarkup:
    keyboard = []
    row = []

    for layout in LAYOUTS:
        layout_text = BUTTONS_LAYOUT.get(layout, "Unknown layout")
        text = f"‚úÖ {layout_text}" if layout == selected_layout else f"üìÑ {layout_text}"

        button = InlineKeyboardButton(
            text=text,
            callback_data=layout
        )
        row.append(button)

        if len(row) == 2:
            keyboard.append(row)
            row = []

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–ø–æ–ª–Ω—É—é —Å—Ç—Ä–æ–∫—É –∫–Ω–æ–ø–æ–∫ (–µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∞—Å—å –æ–¥–Ω–∞)
    if row:
        keyboard.append(row)
        row = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    back_button = InlineKeyboardButton(
        text=BUTTON_RETURN,
        callback_data=BACK
    )

    # –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞—è ‚Äî —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É, –∏–Ω–∞—á–µ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Ç–µ–∫—É—â—É—é
    if not keyboard or len(keyboard[-1]) == 2:
        keyboard.append([back_button])
    else:
        keyboard[-1].append(back_button)

    return InlineKeyboardMarkup(inline_keyboard=keyboard)